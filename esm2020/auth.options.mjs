import { InjectionToken } from '@angular/core';
const socialLinks = [];
export const defaultAuthOptions = {
    strategies: [],
    forms: {
        login: {
            redirectDelay: 500,
            strategy: 'email',
            rememberMe: true,
            showMessages: {
                // show/not show success/error messages
                success: true,
                error: true,
            },
            socialLinks: socialLinks, // social links at the bottom of a page
        },
        register: {
            redirectDelay: 500,
            strategy: 'email',
            showMessages: {
                success: true,
                error: true,
            },
            terms: true,
            socialLinks: socialLinks,
        },
        requestPassword: {
            redirectDelay: 500,
            strategy: 'email',
            showMessages: {
                success: true,
                error: true,
            },
            socialLinks: socialLinks,
        },
        resetPassword: {
            redirectDelay: 500,
            strategy: 'email',
            showMessages: {
                success: true,
                error: true,
            },
            socialLinks: socialLinks,
        },
        logout: {
            redirectDelay: 500,
            strategy: 'email',
        },
        validation: {
            password: {
                required: true,
                minLength: 4,
                maxLength: 50,
            },
            email: {
                required: true,
            },
            fullName: {
                required: false,
                minLength: 4,
                maxLength: 50,
            },
        },
    },
};
export const NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');
export const NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');
export const NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');
export const NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');
export const NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');
export const NB_AUTH_TOKEN_INTERCEPTOR_FILTER = new InjectionToken('Nebular Interceptor Filter');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5vcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9hdXRoL2F1dGgub3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBd0IvQyxNQUFNLFdBQVcsR0FBdUIsRUFBRSxDQUFDO0FBRTNDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFRO0lBQ3JDLFVBQVUsRUFBRSxFQUFFO0lBQ2QsS0FBSyxFQUFFO1FBQ0wsS0FBSyxFQUFFO1lBQ0wsYUFBYSxFQUFFLEdBQUc7WUFDbEIsUUFBUSxFQUFFLE9BQU87WUFDakIsVUFBVSxFQUFFLElBQUk7WUFDaEIsWUFBWSxFQUFFO2dCQUNaLHVDQUF1QztnQkFDdkMsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsS0FBSyxFQUFFLElBQUk7YUFDWjtZQUNELFdBQVcsRUFBRSxXQUFXLEVBQUUsdUNBQXVDO1NBQ2xFO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsYUFBYSxFQUFFLEdBQUc7WUFDbEIsUUFBUSxFQUFFLE9BQU87WUFDakIsWUFBWSxFQUFFO2dCQUNaLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRCxLQUFLLEVBQUUsSUFBSTtZQUNYLFdBQVcsRUFBRSxXQUFXO1NBQ3pCO1FBQ0QsZUFBZSxFQUFFO1lBQ2YsYUFBYSxFQUFFLEdBQUc7WUFDbEIsUUFBUSxFQUFFLE9BQU87WUFDakIsWUFBWSxFQUFFO2dCQUNaLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRCxXQUFXLEVBQUUsV0FBVztTQUN6QjtRQUNELGFBQWEsRUFBRTtZQUNiLGFBQWEsRUFBRSxHQUFHO1lBQ2xCLFFBQVEsRUFBRSxPQUFPO1lBQ2pCLFlBQVksRUFBRTtnQkFDWixPQUFPLEVBQUUsSUFBSTtnQkFDYixLQUFLLEVBQUUsSUFBSTthQUNaO1lBQ0QsV0FBVyxFQUFFLFdBQVc7U0FDekI7UUFDRCxNQUFNLEVBQUU7WUFDTixhQUFhLEVBQUUsR0FBRztZQUNsQixRQUFRLEVBQUUsT0FBTztTQUNsQjtRQUNELFVBQVUsRUFBRTtZQUNWLFFBQVEsRUFBRTtnQkFDUixRQUFRLEVBQUUsSUFBSTtnQkFDZCxTQUFTLEVBQUUsQ0FBQztnQkFDWixTQUFTLEVBQUUsRUFBRTthQUNkO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLFFBQVEsRUFBRSxJQUFJO2FBQ2Y7WUFDRCxRQUFRLEVBQUU7Z0JBQ1IsUUFBUSxFQUFFLEtBQUs7Z0JBQ2YsU0FBUyxFQUFFLENBQUM7Z0JBQ1osU0FBUyxFQUFFLEVBQUU7YUFDZDtTQUNGO0tBQ0Y7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLElBQUksY0FBYyxDQUFnQixzQkFBc0IsQ0FBQyxDQUFDO0FBQ3pGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLElBQUksY0FBYyxDQUFnQiwyQkFBMkIsQ0FBQyxDQUFDO0FBQ25HLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUFtQix5QkFBeUIsQ0FBQyxDQUFDO0FBQ2xHLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxJQUFJLGNBQWMsQ0FBa0MscUJBQXFCLENBQUMsQ0FBQztBQUN6RyxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxJQUFJLGNBQWMsQ0FBUyxtQ0FBbUMsQ0FBQyxDQUFDO0FBQzFHLE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUFHLElBQUksY0FBYyxDQUNoRSw0QkFBNEIsQ0FDN0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE5iQXV0aFN0cmF0ZWd5IH0gZnJvbSAnLi9zdHJhdGVnaWVzL2F1dGgtc3RyYXRlZ3knO1xuaW1wb3J0IHsgTmJBdXRoU3RyYXRlZ3lPcHRpb25zIH0gZnJvbSAnLi9zdHJhdGVnaWVzL2F1dGgtc3RyYXRlZ3ktb3B0aW9ucyc7XG5pbXBvcnQgeyBOYkF1dGhUb2tlbiwgTmJBdXRoVG9rZW5DbGFzcyB9IGZyb20gJy4vc2VydmljZXMvdG9rZW4vdG9rZW4nO1xuXG5leHBvcnQgdHlwZSBOYkF1dGhTdHJhdGVneUNsYXNzID0gbmV3ICguLi5wYXJhbXM6IGFueVtdKSA9PiBOYkF1dGhTdHJhdGVneTtcblxuZXhwb3J0IHR5cGUgTmJBdXRoU3RyYXRlZ2llcyA9IFtOYkF1dGhTdHJhdGVneUNsYXNzLCBOYkF1dGhTdHJhdGVneU9wdGlvbnNdW107XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmJBdXRoT3B0aW9ucyB7XG4gIGZvcm1zPzogYW55O1xuICBzdHJhdGVnaWVzPzogTmJBdXRoU3RyYXRlZ2llcztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBOYkF1dGhTb2NpYWxMaW5rIHtcbiAgbGluaz86IHN0cmluZztcbiAgdXJsPzogc3RyaW5nO1xuICB0YXJnZXQ/OiBzdHJpbmc7XG4gIHRpdGxlPzogc3RyaW5nO1xuICBpY29uPzogc3RyaW5nO1xuICBwYWNrPzogc3RyaW5nO1xufVxuXG5jb25zdCBzb2NpYWxMaW5rczogTmJBdXRoU29jaWFsTGlua1tdID0gW107XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0QXV0aE9wdGlvbnM6IGFueSA9IHtcbiAgc3RyYXRlZ2llczogW10sXG4gIGZvcm1zOiB7XG4gICAgbG9naW46IHtcbiAgICAgIHJlZGlyZWN0RGVsYXk6IDUwMCwgLy8gZGVsYXkgYmVmb3JlIHJlZGlyZWN0IGFmdGVyIGEgc3VjY2Vzc2Z1bCBsb2dpbiwgd2hpbGUgc3VjY2VzcyBtZXNzYWdlIGlzIHNob3duIHRvIHRoZSB1c2VyXG4gICAgICBzdHJhdGVneTogJ2VtYWlsJywgLy8gcHJvdmlkZXIgaWQga2V5LiBJZiB5b3UgaGF2ZSBtdWx0aXBsZSBzdHJhdGVnaWVzLCBvciB3aGF0IHRvIHVzZSB5b3VyIG93blxuICAgICAgcmVtZW1iZXJNZTogdHJ1ZSwgLy8gd2hldGhlciB0byBzaG93IG9yIG5vdCB0aGUgYHJlbWVtYmVyTWVgIGNoZWNrYm94XG4gICAgICBzaG93TWVzc2FnZXM6IHtcbiAgICAgICAgLy8gc2hvdy9ub3Qgc2hvdyBzdWNjZXNzL2Vycm9yIG1lc3NhZ2VzXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGVycm9yOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHNvY2lhbExpbmtzOiBzb2NpYWxMaW5rcywgLy8gc29jaWFsIGxpbmtzIGF0IHRoZSBib3R0b20gb2YgYSBwYWdlXG4gICAgfSxcbiAgICByZWdpc3Rlcjoge1xuICAgICAgcmVkaXJlY3REZWxheTogNTAwLFxuICAgICAgc3RyYXRlZ3k6ICdlbWFpbCcsXG4gICAgICBzaG93TWVzc2FnZXM6IHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgZXJyb3I6IHRydWUsXG4gICAgICB9LFxuICAgICAgdGVybXM6IHRydWUsXG4gICAgICBzb2NpYWxMaW5rczogc29jaWFsTGlua3MsXG4gICAgfSxcbiAgICByZXF1ZXN0UGFzc3dvcmQ6IHtcbiAgICAgIHJlZGlyZWN0RGVsYXk6IDUwMCxcbiAgICAgIHN0cmF0ZWd5OiAnZW1haWwnLFxuICAgICAgc2hvd01lc3NhZ2VzOiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGVycm9yOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHNvY2lhbExpbmtzOiBzb2NpYWxMaW5rcyxcbiAgICB9LFxuICAgIHJlc2V0UGFzc3dvcmQ6IHtcbiAgICAgIHJlZGlyZWN0RGVsYXk6IDUwMCxcbiAgICAgIHN0cmF0ZWd5OiAnZW1haWwnLFxuICAgICAgc2hvd01lc3NhZ2VzOiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGVycm9yOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIHNvY2lhbExpbmtzOiBzb2NpYWxMaW5rcyxcbiAgICB9LFxuICAgIGxvZ291dDoge1xuICAgICAgcmVkaXJlY3REZWxheTogNTAwLFxuICAgICAgc3RyYXRlZ3k6ICdlbWFpbCcsXG4gICAgfSxcbiAgICB2YWxpZGF0aW9uOiB7XG4gICAgICBwYXNzd29yZDoge1xuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgbWluTGVuZ3RoOiA0LFxuICAgICAgICBtYXhMZW5ndGg6IDUwLFxuICAgICAgfSxcbiAgICAgIGVtYWlsOiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgfSxcbiAgICAgIGZ1bGxOYW1lOiB7XG4gICAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgICAgbWluTGVuZ3RoOiA0LFxuICAgICAgICBtYXhMZW5ndGg6IDUwLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IE5CX0FVVEhfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOYkF1dGhPcHRpb25zPignTmVidWxhciBBdXRoIE9wdGlvbnMnKTtcbmV4cG9ydCBjb25zdCBOQl9BVVRIX1VTRVJfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOYkF1dGhPcHRpb25zPignTmVidWxhciBVc2VyIEF1dGggT3B0aW9ucycpO1xuZXhwb3J0IGNvbnN0IE5CX0FVVEhfU1RSQVRFR0lFUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOYkF1dGhTdHJhdGVnaWVzPignTmVidWxhciBBdXRoIFN0cmF0ZWdpZXMnKTtcbmV4cG9ydCBjb25zdCBOQl9BVVRIX1RPS0VOUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOYkF1dGhUb2tlbkNsYXNzPE5iQXV0aFRva2VuPltdPignTmVidWxhciBBdXRoIFRva2VucycpO1xuZXhwb3J0IGNvbnN0IE5CX0FVVEhfSU5URVJDRVBUT1JfSEVBREVSID0gbmV3IEluamVjdGlvblRva2VuPHN0cmluZz4oJ05lYnVsYXIgU2ltcGxlIEludGVyY2VwdG9yIEhlYWRlcicpO1xuZXhwb3J0IGNvbnN0IE5CX0FVVEhfVE9LRU5fSU5URVJDRVBUT1JfRklMVEVSID0gbmV3IEluamVjdGlvblRva2VuPChyZXE6IEh0dHBSZXF1ZXN0PGFueT4pID0+IGJvb2xlYW4+KFxuICAnTmVidWxhciBJbnRlcmNlcHRvciBGaWx0ZXInLFxuKTtcbiJdfQ==